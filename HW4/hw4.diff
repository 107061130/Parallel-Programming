[1mdiff --git a/hw4.diff b/hw4.diff[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/src/ucp/core/ucp_worker.c b/src/ucp/core/ucp_worker.c[m
[1mindex 5adcee9..b99b3e3 100644[m
[1m--- a/src/ucp/core/ucp_worker.c[m
[1m+++ b/src/ucp/core/ucp_worker.c[m
[36m@@ -1777,6 +1777,7 @@[m [mucp_worker_print_used_tls(ucp_worker_h worker, ucp_worker_cfg_index_t cfg_index)[m
     int amo_emul                    = 0;[m
     int num_valid_lanes             = 0;[m
     ucp_lane_index_t lane;[m
[32m+[m[32m    ucp_config_t *config;[m
 [m
     ucp_ep_config_name(worker, cfg_index, &strb);[m
 [m
[36m@@ -1849,9 +1850,13 @@[m [mucp_worker_print_used_tls(ucp_worker_h worker, ucp_worker_cfg_index_t cfg_index)[m
     ucp_worker_add_feature_rsc(context, key, am_lanes_map, "am", &strb);[m
     ucp_worker_add_feature_rsc(context, key, stream_lanes_map, "stream", &strb);[m
     ucp_worker_add_feature_rsc(context, key, ka_lanes_map, "ka", &strb);[m
[31m-[m
[32m+[m[41m    [m
     ucs_string_buffer_rtrim(&strb, "; ");[m
[32m+[m[41m    [m
[32m+[m[32m    ucp_config_read(NULL, NULL, &config);[m
[32m+[m[32m    ucp_config_print(config, stdout, NULL, UCS_CONFIG_PRINT_TLS);[m
 [m
[32m+[m[32m    printf("%s\n", ucs_string_buffer_cstr(&strb));[m
     ucs_info("%s", ucs_string_buffer_cstr(&strb));[m
 }[m
 [m
[1mdiff --git a/src/ucs/config/parser.c b/src/ucs/config/parser.c[m
[1mindex 82bc04b..30b3792 100644[m
[1m--- a/src/ucs/config/parser.c[m
[1m+++ b/src/ucs/config/parser.c[m
[36m@@ -1856,6 +1856,9 @@[m [mvoid ucs_config_parser_print_opts(FILE *stream, const char *title, const void *o[m
 {[m
     ucs_config_parser_prefix_t table_prefix_elem;[m
     UCS_LIST_HEAD(prefix_list);[m
[32m+[m[32m    char **envp;[m
[32m+[m[32m    char *envstr;[m
[32m+[m[32m    char *var_name, *saveptr;[m
 [m
     if (flags & UCS_CONFIG_PRINT_DOC) {[m
         fprintf(stream, "# UCX library configuration file\n");[m
[36m@@ -1876,12 +1879,17 @@[m [mvoid ucs_config_parser_print_opts(FILE *stream, const char *title, const void *o[m
         ucs_config_parser_print_opts_recurs(stream, opts, fields, flags,[m
                                             prefix, &prefix_list);[m
     }[m
[31m-[m
[32m+[m[41m    [m
     // TODO: PP-HW4[m
[31m-    if (flags /*& UCS_CONFIG_PRINT_TLS*/) {[m
[31m-[m
[31m-    }[m
[31m-[m
[32m+[m[32m    if (flags & UCS_CONFIG_PRINT_TLS) {[m
[32m+[m[32m        for (envp = environ; *envp != NULL; ++envp) {[m
[32m+[m[32m            envstr = ucs_strdup(*envp, "env_str");[m
[32m+[m[41m        [m	[32m  var_name = strtok_r(envstr, "=", &saveptr);[m
[32m+[m[41m        [m	[32m  //printf("%s\n", var_name);[m
[32m+[m[32m            if (!strcmp("UCX_TLS", var_name)) printf("%s=%s\n", var_name, saveptr);[m
[32m+[m[32m            ucs_free(envstr);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m[41m    [m
     if (flags & UCS_CONFIG_PRINT_HEADER) {[m
         fprintf(stream, "\n");[m
     }[m
[1mdiff --git a/src/ucs/config/types.h b/src/ucs/config/types.h[m
[1mindex c300a6b..f6b93cb 100644[m
[1m--- a/src/ucs/config/types.h[m
[1m+++ b/src/ucs/config/types.h[m
[36m@@ -90,7 +90,8 @@[m [mtypedef enum {[m
     UCS_CONFIG_PRINT_HEADER          = UCS_BIT(1),[m
     UCS_CONFIG_PRINT_DOC             = UCS_BIT(2),[m
     UCS_CONFIG_PRINT_HIDDEN          = UCS_BIT(3),[m
[31m-    UCS_CONFIG_PRINT_COMMENT_DEFAULT = UCS_BIT(4)[m
[32m+[m[32m    UCS_CONFIG_PRINT_COMMENT_DEFAULT = UCS_BIT(4),[m
[32m+[m[32m    UCS_CONFIG_PRINT_TLS = UCS_BIT(5)[m
 } ucs_config_print_flags_t;[m
 [m
 [m
